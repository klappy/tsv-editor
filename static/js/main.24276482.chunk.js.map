{"version":3,"sources":["FileOpen/helpers.js","FileOpen/index.js","FileOpen/Component.js","File.context.js","ApplicationBar.js","Table/helpers.js","Table/Cell.js","Table/RowDelete.js","Table/RowMenu.js","Table/Component.js","Table/CustomToolbar.js","Table/index.js","Table/Container.js","App.js","serviceWorker.js","index.js"],"names":["handleTsvFileObject","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","fileObject","title","columns","data","text","tsv","wrap","_context","prev","next","pFileReader","sent","tsvParse","name","abrupt","stop","this","_x","apply","arguments","split","map","line","filter","row","length","shift","tsvGenerate","rows","cells","join","Promise","resolve","reject","fileReader","FileReader","onload","e","target","result","readAsText","Component","withStyles","theme","fab","margin","spacing","unit","classes","setFile","react_default","createElement","lib","extensions","onChange","_ref2","file","helpers","onError","errMsg","alert","icons_index_es","FileContext","React","createContext","FileContextProvider","children","_useState","useState","_useState2","slicedToArray","value","addRow","rowIndex","slice","columnCount","Array","fill","_data","toConsumableArray","splice","_file","objectSpread","deleteRow","_ref3","editCell","_ref4","columnIndex","downloadFile","unshift","FileHelpers","fileDownload","Provider","FileContextConsumer","Consumer","root","flexGrow","menuButton","marginLeft","marginRight","className","index_es","position","variant","color","aria-label","FileOpen","turndownService","TurndownService","addRule","replacement","markdownToHtml","markdown","marked","sanitize","_ref$tableMeta","tableMeta","replace","dir","contentEditable","onBlur","html","turndown","innerHTML","dangerouslySetInnerHTML","__html","RowDelete","rowAction","clickableComponent","_React$useState","_React$useState2","open","setOpen","handleClose","rowComponent","i","key","onClick","onClose","aria-labelledby","aria-describedby","id","autoFocus","RowMenu","anchorEl","setAnchorEl","Boolean","handleClick","event","currentTarget","style","padding","aria-owns","undefined","aria-haspopup","Table_RowDelete","getMuiTheme","createMuiTheme","typography","useNextVariants","overrides","MuiTableCell","textAlign","MuiTableRow","height","MUIDataTable","responsiveScroll","maxHeight","MUIDataTableBodyCell","maxWidth","columnConfig","dataRows","_ref$file","options","console","log","customBodyRender","updateValue","Table_Cell","sort","Table_RowMenu","concat","styles","dist_default","iconButton","Fragment","Container","rowsPerPage","setRowsPerPage","print","resizableColumns","selectableRows","rowsPerPageOptions","onChangeRowsPerPage","numberOfRows","download","customToolbar","Table_CustomToolbar","Table_Component","App","src_ApplicationBar","Table","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8TACaA,EAAmB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAE7BT,EAF6B,CAAAO,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGZC,EAAYV,GAHA,OAGzBI,EAHyBG,EAAAI,KAIzBN,EAAMO,EAASR,GACrBF,EAAUG,EAAIH,QACdC,EAAOE,EAAIF,KACXF,EAAQD,EAAWa,KAPY,cAAAN,EAAAO,OAAA,SAS1B,CAACb,QAAOC,UAASC,SATS,yBAAAI,EAAAQ,SAAAhB,EAAAiB,SAAH,gBAAAC,GAAA,OAAAxB,EAAAyB,MAAAF,KAAAG,YAAA,GAYnBP,EAAW,SAACR,GACvB,IAAIC,EAAM,GACV,GAAID,EAAM,CACR,IAAMD,EAAOC,EAAKgB,MAAM,MACvBC,IAAI,SAAAC,GAAI,OAAIA,EAAKF,MAAM,QACvBG,OAAO,SAAAC,GAAG,OAAIA,GAAOA,EAAIC,OAAS,IAEnCpB,EAAM,CACJH,QAFcC,EAAKuB,QAGnBvB,QAGJ,OAAOE,GAGIsB,EAAc,SAACC,GAC1B,IAAIvB,EAAM,GAKV,OAJIuB,IACFvB,EAAMuB,EAAKP,IAAI,SAAAQ,GAAK,OAAIA,EAAMC,KAAK,QAClCA,KAAK,OAEDzB,GAGIK,EAAc,SAACV,GAC1B,OAAO,IAAI+B,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAa,IAAIC,WACrBD,EAAWE,OAAS,SAACC,GACnB,IAAMlC,EAAOkC,EAAEC,OAAOC,OACtBP,EAAQ7B,IAEV+B,EAAWM,WAAWxC,MC3CXyC,EC2CAC,qBANA,SAAAC,GAAK,MAAK,CACvBC,IAAK,CACHC,OAAQF,EAAMG,QAAQC,QAIXL,CAhCW,SAAAjD,GAGpBA,EAFJuD,QAEI,IADJC,EACIxD,EADJwD,QAGA,OACEC,EAAArD,EAAAsD,cAACC,EAAA,WAAD,CACEC,WAAY,CAAC,OACbC,SAAQ,eAAAC,EAAA7D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAwD,EAAA,OAAA5D,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUgD,EAA4BzD,GADtC,OACHwD,EADGjD,EAAAI,KAETsC,EAAQO,GAFC,wBAAAjD,EAAAQ,SAAAhB,EAAAiB,SAAH,gBAAAC,GAAA,OAAAsC,EAAArC,MAAAF,KAAAG,YAAA,GAIRuC,QAAS,SAAAC,GACPC,MAAMD,KAGRT,EAAArD,EAAAsD,cAACU,EAAA,EAAD,mDCtBOC,EAAcC,IAAMC,gBAE1B,SAASC,EAATxE,GAAyC,IAAXyE,EAAWzE,EAAXyE,SAAWC,EACtBC,mBAAS,IADaC,EAAA3E,OAAA4E,EAAA,EAAA5E,CAAAyE,EAAA,GACvCX,EADuCa,EAAA,GACjCpB,EADiCoB,EAAA,GAsCxCE,EAAQ,CACZf,OACAP,UACAuB,OAtCa,SAAAjB,GAAgB,IAAdkB,EAAclB,EAAdkB,SACXtE,EAAOqD,EAAKrD,KAAKuE,MAAM,GACrBC,EAAcnB,EAAKtD,QAAQuB,OAC3BD,EAAMoD,MAAMD,GAAaE,KAAK,IAChCC,EAAKpF,OAAAqF,EAAA,EAAArF,CAAOS,GAEhB2E,EAAME,OAAOP,EAAW,EAAG,EAAGjD,GAC9B,IAAMyD,EAAKvF,OAAAwF,EAAA,EAAAxF,CAAA,GAAO8D,EAAP,CAAarD,KAAM2E,IAC9B7B,EAAQgC,IA+BRE,UA5BgB,SAAAC,GAAgB,IAAdX,EAAcW,EAAdX,SACdtE,EAAOqD,EAAKrD,KAAKuE,MAAM,GAC3BvE,EAAK6E,OAAOP,EAAU,GACtB,IAAMQ,EAAKvF,OAAAwF,EAAA,EAAAxF,CAAA,GAAO8D,EAAP,CAAarD,SACxB8C,EAAQgC,IAyBRI,SAtBe,SAAAC,GAAqC,IAAlCb,EAAkCa,EAAlCb,SAAUc,EAAwBD,EAAxBC,YAAahB,EAAWe,EAAXf,MACrCpE,EAAOqD,EAAKrD,KAAKuE,MAAM,GAE3BvE,EAAKsE,GAAUc,EAAc,GAAKhB,EAClC,IAAMU,EAAKvF,OAAAwF,EAAA,EAAAxF,CAAA,GAAO8D,EAAP,CAAarD,SACxB8C,EAAQgC,IAkBRO,aAfmB,WACnB,GAAIhC,EAAKtD,SAAWsD,EAAKrD,KAAM,CAC7B,IAAIyB,EAAIlC,OAAAqF,EAAA,EAAArF,CAAO8D,EAAKrD,MACpByB,EAAK6D,QAAQjC,EAAKtD,SAClB,IAAMG,EAAMqF,EAAwB9D,GACpC+D,IAAatF,EAAKmD,EAAKvD,UAa3B,OACEiD,EAAArD,EAAAsD,cAACW,EAAY8B,SAAb,CAAsBrB,MAAOA,GAC1BL,GAKA,IAAM2B,EAAsB/B,EAAYgC,SCZhCpD,uBAVA,CACbqD,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAa,GACbC,YAAa,KAIFzD,CArCQ,SAAAjD,GAEjB,IADJuD,EACIvD,EADJuD,QAEA,OACEE,EAAArD,EAAAsD,cAAC0C,EAAD,KACC,SAAAtC,GAAA,IAAGC,EAAHD,EAAGC,KAAMP,EAATM,EAASN,QAAT,OACCC,EAAArD,EAAAsD,cAAA,OAAKiD,UAAWpD,EAAQ+C,MACtB7C,EAAArD,EAAAsD,cAACkD,EAAA,OAAD,CAAQC,SAAS,UACfpD,EAAArD,EAAAsD,cAACkD,EAAA,QAAD,CAASE,QAAQ,SACfrD,EAAArD,EAAAsD,cAACkD,EAAA,WAAD,CAAYD,UAAWpD,EAAQiD,WAAYO,MAAM,UAAUC,aAAW,QACpEvD,EAAArD,EAAAsD,cAACuD,EAAD,CAAUzD,QAASA,KAErBC,EAAArD,EAAAsD,cAACkD,EAAA,WAAD,CAAYE,QAAQ,KAAKC,MAAM,WAC5BhD,EAAKvD,kDCvBd0G,EAAkB,WAAIC,GAC5BD,EAAgBE,QAAQ,aAAc,CACpCtF,OAAQ,CAAC,MACTuF,YAAa,iBAAM,UAGd,IAAMC,EAAiB,SAACC,GAE7B,OADaC,IAAOD,EAAU,CAACE,UAAU,KCmC5BxE,uBAHA,SAAAC,GAAK,MAAK,IAGVD,CArCF,SAAAjD,GAQPA,EAPJuD,QAOI,IANJuB,EAMI9E,EANJ8E,MAMI4C,GAAA1H,EALJ2H,UAKI3H,EAJJ2H,WACE7B,EAGE4B,EAHF5B,YACAd,EAEE0C,EAFF1C,SAGIuC,EAAWzC,EAAM8C,QAAQ,SAAU,MACzC,OACEnE,EAAArD,EAAAsD,cAAC0C,EAAD,KACG,SAAAtC,GAAA,IAAG8B,EAAH9B,EAAG8B,SAAH,OACCnC,EAAArD,EAAAsD,cAAA,OACEmE,IAAI,OACJC,iBAAe,EACfC,OAAQ,SAACnF,GACP,IACMkC,EDZY,SAACkD,GAE7B,OADiBd,EAAgBe,SAASD,GAAMJ,QAAQ,MAAM,QCWtC5D,CADDpB,EAAEC,OAAOqF,WAEtBtC,EAAS,CAACZ,WAAUc,cAAahB,WAEnCqD,wBAAyB,CACvBC,OAAQpE,EAAuBuD,UCwC5Bc,MA5Df,SAAArI,GAMG,IALDgF,EAKChF,EALDgF,SACAvE,EAICT,EAJDS,QACAsB,EAGC/B,EAHD+B,IACAuG,EAECtI,EAFDsI,UACAC,EACCvI,EADDuI,mBACCC,EACuBlE,IAAMK,UAAS,GADtC8D,EAAAxI,OAAA4E,EAAA,EAAA5E,CAAAuI,EAAA,GACME,EADND,EAAA,GACYE,EADZF,EAAA,GAOD,SAASG,IACPD,GAAQ,GAQV,IAAME,EAAepI,EAAQmB,IAAI,SAACR,EAAM0H,GAAP,OAC/BrF,EAAArD,EAAAsD,cAACkD,EAAA,kBAAD,CAAmBmC,IAAK3H,EAAO0H,GAC7BrF,EAAArD,EAAAsD,cAAA,cAAStC,EAAT,KACE,IAAMW,EAAI+G,MAIhB,OACErF,EAAArD,EAAAsD,cAAA,WACED,EAAArD,EAAAsD,cAAA,OAAKsF,QAtBT,WACEL,GAAQ,KAsBHJ,GAEH9E,EAAArD,EAAAsD,cAACkD,EAAA,OAAD,CACE8B,KAAMA,EACNO,QAASL,EACTM,kBAAgB,qBAChBC,mBAAiB,4BAEjB1F,EAAArD,EAAAsD,cAACkD,EAAA,YAAD,CAAawC,GAAG,sBAAsB,oBACtC3F,EAAArD,EAAAsD,cAACkD,EAAA,cAAD,KACEnD,EAAArD,EAAAsD,cAACkD,EAAA,kBAAD,CAAmBwC,GAAG,4BAAtB,4GAGCP,GAEHpF,EAAArD,EAAAsD,cAACkD,EAAA,cAAD,KACEnD,EAAArD,EAAAsD,cAACkD,EAAA,OAAD,CAAQoC,QAASJ,EAAa7B,MAAM,UAAUsC,WAAS,GAAvD,UAGA5F,EAAArD,EAAAsD,cAACkD,EAAA,OAAD,CAAQoC,QAlChB,WACEV,EAAU,CAACtD,aACX2D,GAAQ,IAgC6B5B,MAAM,aAArC,cC+BKuC,MA1Ef,SAAAtJ,GAIG,IAHDgF,EAGChF,EAHDgF,SACAvE,EAECT,EAFDS,QACAsB,EACC/B,EADD+B,IACCyG,EAC+BlE,IAAMK,SAAS,MAD9C8D,EAAAxI,OAAA4E,EAAA,EAAA5E,CAAAuI,EAAA,GACMe,EADNd,EAAA,GACgBe,EADhBf,EAAA,GAEKC,EAAOe,QAAQF,GAErB,SAASG,EAAYC,GACnBH,EAAYG,EAAMC,eAGpB,SAAShB,IACPY,EAAY,MAGd,OACE/F,EAAArD,EAAAsD,cAAC0C,EAAD,KACC,SAAAtC,KAAGC,KAAHD,EAASN,QAAT,IAAkBuB,EAAlBjB,EAAkBiB,OAAQW,EAA1B5B,EAA0B4B,UAA1B,OACCjC,EAAArD,EAAAsD,cAAA,WACED,EAAArD,EAAAsD,cAACkD,EAAA,WAAD,CACEiD,MAAO,CAACC,QAAS,GACjB9C,aAAW,UACX+C,YAAWrB,EAAO,gBAAasB,EAC/BC,gBAAc,OACdjB,QAASU,GAETjG,EAAArD,EAAAsD,cAACU,EAAA,EAAD,OAEFX,EAAArD,EAAAsD,cAACkD,EAAA,KAAD,CACEwC,GAAG,WACHG,SAAUA,EACVb,KAAMA,EACNO,QAASL,GAETnF,EAAArD,EAAAsD,cAACkD,EAAA,SAAD,CACEoC,QAAS,WACPjE,EAAO,CAACC,aACR4D,MAGFnF,EAAArD,EAAAsD,cAACkD,EAAA,aAAD,KACEnD,EAAArD,EAAAsD,cAACU,EAAA,EAAD,OAEFX,EAAArD,EAAAsD,cAACkD,EAAA,WAAD,iBAIFnD,EAAArD,EAAAsD,cAACwG,EAAD,CACElF,SAAUA,EACVvE,QAASA,EACTsB,IAAKA,EACLuG,UAAW,SAAA3C,GAAgB,IAAdX,EAAcW,EAAdX,SACXU,EAAU,CAACV,aACX4D,KAEFL,mBACE9E,EAAArD,EAAAsD,cAACkD,EAAA,SAAD,KACEnD,EAAArD,EAAAsD,cAACkD,EAAA,aAAD,KACEnD,EAAArD,EAAAsD,cAACU,EAAA,EAAD,OAEFX,EAAArD,EAAAsD,cAACkD,EAAA,WAAD,2BCPVuD,EAAc,kBAAMC,yBAAe,CACvCC,WAAY,CACVC,iBAAiB,GAEnBC,UAAW,CACTC,aAAc,CACZlE,KAAM,CACJwD,QAAS,cACTW,UAAW,UAGfC,YAAa,CACXpE,KAAM,CACJqE,OAAQ,UAGZC,aAAc,CACZC,iBAAkB,CAChBC,UAAW,UAGfC,qBAAsB,CACpBzE,KAAM,CACJ0E,SAAU,YAMH/H,uBAnCA,SAAAC,GAAK,MAAK,CACvBoD,KAAM,CACJwD,QAAS,SAiCE7G,CA5FQ,SAAAjD,GASjB,IACAiL,EAAcC,EATlB3H,EAQIvD,EARJuD,QAQI4H,GAAAnL,EAPJ+D,KAOI/D,EANJ+D,MACEvD,EAKE2K,EALF3K,MACAC,EAIE0K,EAJF1K,QACAC,EAGEyK,EAHFzK,KAEF0K,EACIpL,EADJoL,QAGI3K,GAAWC,IACb2K,QAAQC,IAAI5K,EAAKsB,SACjBiJ,EAAexK,EAAQmB,IAAI,SAAAR,GAAI,MAAK,CAClCA,OACAgK,QAAS,CACPG,iBAAkB,SAACzG,EAAO6C,EAAW6D,GAAnB,OAChB/H,EAAArD,EAAAsD,cAAC+H,EAAD,CAAM3G,MAAOA,EAAO6C,UAAWA,UAWxB3B,QAPS,CACpB5E,KAAM,GACNgK,QAAS,CACPM,MAAM,EACN5J,QAAQ,KAIZoJ,EAAWxK,EAAKkB,IAAI,SAACG,EAAKiD,GAKxB,MADQ,CAFNvB,EAAArD,EAAAsD,cAACiI,EAAD,CAAS3G,SAAUA,EAAUvE,QAASA,EAASsB,IAAKA,KAE9C6J,OAAA3L,OAAAqF,EAAA,EAAArF,CAAoB8B,OAKhC,OACE0B,EAAArD,EAAAsD,cAAA,OAAKiD,UAAWpD,EAAQ+C,MACtB7C,EAAArD,EAAAsD,cAACmI,EAAA,iBAAD,CAAkB3I,MAAOiH,KACvB1G,EAAArD,EAAAsD,cAACoI,EAAA1L,EAAD,CACEI,MAAOA,EACPE,KAAMwK,EACNzK,QAASwK,EACTG,QAASA,QCrBnB,IAIenI,uBAJA,CACb8I,WAAY,IAGoB,CAAE3K,KAAM,iBAA3B6B,CAxBf,SAAAjD,GAEG,IADDuD,EACCvD,EADDuD,QAGA,OACEE,EAAArD,EAAAsD,cAAC0C,EAAD,KACG,SAAAtC,GAAA,IAAGiC,EAAHjC,EAAGiC,aAAH,OACCtC,EAAArD,EAAAsD,cAACD,EAAArD,EAAM4L,SAAP,KACEvI,EAAArD,EAAAsD,cAACkD,EAAA,QAAD,CAASpG,MAAM,gBACbiD,EAAArD,EAAAsD,cAACkD,EAAA,WAAD,CAAYD,UAAWpD,EAAQwI,WAAY/C,QAASjD,GAClDtC,EAAArD,EAAAsD,cAACU,EAAA,EAAD,aCtBC6H,ECMQ,WAAM,IAAAvH,EACWC,mBAAS,IADpBC,EAAA3E,OAAA4E,EAAA,EAAA5E,CAAAyE,EAAA,GACpBwH,EADoBtH,EAAA,GACPuH,EADOvH,EAAA,GAGrBwG,EAAU,CAGdgB,OAAO,EACPC,kBAAkB,EAClBC,gBAAgB,EAChBJ,YAAaA,EACbK,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,oBAAqB,SAACC,GACpBN,EAAeM,IAEjBC,UAAU,EACVC,cAAe,kBAAQlJ,EAAArD,EAAAsD,cAACkJ,EAAD,QAGzB,OACEnJ,EAAArD,EAAAsD,cAAC0C,EAAD,KACG,SAAApG,GAAA,IAAG+D,EAAH/D,EAAG+D,KAAH,OACCN,EAAArD,EAAAsD,cAACmJ,EAAD,CACE9I,KAAMA,EACNqH,QAASA,OCXJ0B,EAXH,WACV,OACErJ,EAAArD,EAAAsD,cAAA,OAAKiD,UAAU,OACblD,EAAArD,EAAAsD,cAACc,EAAD,KACEf,EAAArD,EAAAsD,cAACqJ,EAAD,MACAtJ,EAAArD,EAAAsD,cAACsJ,EAAD,SCDYvD,QACW,cAA7BwD,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7J,EAAArD,EAAAsD,cAAC6J,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.24276482.chunk.js","sourcesContent":["\nexport const handleTsvFileObject = async (fileObject) => {\n  let title, columns, data;\n  if (fileObject) {\n    const text = await pFileReader(fileObject);\n    const tsv = tsvParse(text);\n    columns = tsv.columns;\n    data = tsv.data;\n    title = fileObject.name;\n  };\n  return {title, columns, data};\n};\n\nexport const tsvParse = (text) => {\n  let tsv = {};\n  if (text) {\n    const data = text.split('\\n')\n    .map(line => line.split('\\t'))\n    .filter(row => row && row.length > 1);\n    const columns = data.shift();\n    tsv = {\n      columns,\n      data,\n    };\n  }\n  return tsv;\n};\n\nexport const tsvGenerate = (rows) => {\n  let tsv = \"\";\n  if (rows) {\n    tsv = rows.map(cells => cells.join('\\t'))\n    .join('\\n');\n  }\n  return tsv;\n};\n\nexport const pFileReader = (fileObject) => {\n  return new Promise((resolve, reject) => {\n    var fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      const data = e.target.result;\n      resolve(data);\n    };\n    fileReader.readAsText(fileObject);\n  });\n};\n","import Component from './Component';\nexport default Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilePicker } from 'react-file-picker';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n} from '@material-ui/core';\nimport {\n  CloudUpload,\n} from '@material-ui/icons';\n\nimport * as helpers from './helpers';\n\nconst FileOpenComponent = ({\n  classes,\n  setFile,\n}) => {\n\n  return (\n    <FilePicker\n      extensions={['tsv']}\n      onChange={ async (fileObject) => {\n        const file = await helpers.handleTsvFileObject(fileObject);\n        setFile(file);\n      }}\n      onError={errMsg => {\n        alert(errMsg);\n      }}\n    >\n      <CloudUpload />\n    </FilePicker>\n  );\n};\n\nFileOpenComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  setFile: PropTypes.func.isRequired,\n};\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n  },\n});\n\nexport default withStyles(styles)(FileOpenComponent);\n","import React, {useState} from 'react';\nimport fileDownload from 'js-file-download';\n\nimport * as FileHelpers from './FileOpen/helpers';\n\n// File context\nexport const FileContext = React.createContext();\n\nexport function FileContextProvider({children}) {\n  const [file, setFile] = useState({});\n\n  const addRow = ({rowIndex}) => {\n    let data = file.data.slice(0);\n    const columnCount = file.columns.length;\n    const row = Array(columnCount).fill('');\n    let _data = [...data];\n    // by request add row after index\n    _data.splice(rowIndex + 1, 0, row);\n    const _file = {...file, data: _data};\n    setFile(_file);\n  };\n\n  const deleteRow = ({rowIndex}) => {\n    let data = file.data.slice(0);\n    data.splice(rowIndex, 1);\n    const _file = {...file, data};\n    setFile(_file);\n  };\n\n  const editCell = ({ rowIndex, columnIndex, value}) => {\n    let data = file.data.slice(0);\n    // added action first column means we shift index\n    data[rowIndex][columnIndex - 1] = value;\n    const _file = {...file, data};\n    setFile(_file);\n  };\n\n  const downloadFile = () => {\n    if (file.columns && file.data) {\n      let rows = [...file.data];\n      rows.unshift(file.columns);\n      const tsv = FileHelpers.tsvGenerate(rows);\n      fileDownload(tsv, file.title);\n    }\n  };\n\n  const value = {\n    file,\n    setFile,\n    addRow,\n    deleteRow,\n    editCell,\n    downloadFile,\n  };\n\n  return (\n    <FileContext.Provider value={value}>\n      {children}\n    </FileContext.Provider>\n  );\n};\n\nexport const FileContextConsumer = FileContext.Consumer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\n\nimport FileOpen from './FileOpen';\nimport { FileContextConsumer } from './File.context';\n\nconst ApplicationBar = ({\n  classes,\n}) => {\n  return (\n    <FileContextConsumer>\n    {({ file, setFile }) => (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open\">\n              <FileOpen setFile={setFile} />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\">\n              {file.title}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n    )}\n    </FileContextConsumer>\n  );\n};\n\nApplicationBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -18,\n    marginRight: 10,\n  },\n};\n\nexport default withStyles(styles)(ApplicationBar);\n","import marked from 'marked';\nimport TurndownService from 'turndown';\n\nconst turndownService = new TurndownService();\nturndownService.addRule('linebreaks', {\n  filter: ['br'],\n  replacement: () => '<br>',\n});\n\nexport const markdownToHtml = (markdown) => {\n  const html = marked(markdown, {sanitize: true});\n  return html;\n};\n\nexport const htmlToMarkdown = (html) => {\n  const markdown = turndownService.turndown(html).replace(/\\n/g,'<br>');\n  return markdown;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport * as helpers from './helpers';\n\nimport { FileContextConsumer } from '../File.context';\n\nconst Cell = ({\n  classes,\n  value,\n  tableMeta,\n  tableMeta: {\n    columnIndex,\n    rowIndex,\n  },\n}) => {\n  const markdown = value.replace(/<br>/gi, '\\n');\n  return (\n    <FileContextConsumer>\n      {({ editCell }) => (\n        <div\n          dir=\"auto\"\n          contentEditable\n          onBlur={(e)=>{\n            const html = e.target.innerHTML;\n            const value = helpers.htmlToMarkdown(html);\n            editCell({rowIndex, columnIndex, value});\n          }}\n          dangerouslySetInnerHTML={{\n            __html: helpers.markdownToHtml(markdown)\n          }}\n        />\n      )}\n    </FileContextConsumer>\n  );\n};\n\nCell.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n});\n\nexport default withStyles(styles)(Cell);\n","import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core';\n\nfunction RowDelete({\n  rowIndex,\n  columns,\n  row,\n  rowAction,\n  clickableComponent,\n}) {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleAction() {\n    rowAction({rowIndex});\n    setOpen(false);\n  }\n\n  const rowComponent = columns.map((name, i) => (\n    <DialogContentText key={name + i}>\n      <strong>{name}:</strong>\n      { \" \" + row[i]}\n    </DialogContentText>\n  ));\n\n  return (\n    <div>\n      <div onClick={handleClickOpen}>\n        {clickableComponent}\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete this row?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Deleting this row is permanent. You will have to access the file that was imported to recover this data.\n          </DialogContentText>\n          {rowComponent}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n          <Button onClick={handleAction} color=\"secondary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default RowDelete;\n","import React from 'react';\nimport {\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  Typography,\n} from '@material-ui/core';\nimport {\n  MoreVert,\n  AddCircle,\n  RemoveCircle,\n} from '@material-ui/icons';\n\nimport RowDelete from './RowDelete';\n\nimport { FileContextConsumer } from '../File.context';\n\nfunction RowMenu({\n  rowIndex,\n  columns,\n  row,\n}) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <FileContextConsumer>\n    {({ file, setFile, addRow, deleteRow }) => (\n      <div>\n        <IconButton\n          style={{padding: 0}}\n          aria-label=\"Actions\"\n          aria-owns={open ? 'row-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n        >\n          <MoreVert />\n        </IconButton>\n        <Menu\n          id=\"row-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem\n            onClick={() => {\n              addRow({rowIndex});\n              handleClose();\n            }}\n          >\n            <ListItemIcon>\n              <AddCircle />\n            </ListItemIcon>\n            <Typography>\n              Add Row\n            </Typography>\n          </MenuItem>\n          <RowDelete\n            rowIndex={rowIndex}\n            columns={columns}\n            row={row}\n            rowAction={({rowIndex}) => {\n              deleteRow({rowIndex});\n              handleClose();\n            }}\n            clickableComponent={\n              <MenuItem >\n                <ListItemIcon>\n                  <RemoveCircle />\n                </ListItemIcon>\n                <Typography>\n                  Delete Row\n                </Typography>\n              </MenuItem>\n            }\n          />\n        </Menu>\n      </div>\n    )}\n    </FileContextConsumer>\n  );\n}\n\nexport default RowMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Cell from './Cell';\nimport RowMenu from './RowMenu';\n\nconst TableComponent = ({\n  classes,\n  file,\n  file: {\n    title,\n    columns,\n    data,\n  },\n  options,\n}) => {\n  let columnConfig, dataRows;\n  if (columns && data) {\n    console.log(data.length)\n    columnConfig = columns.map(name => ({\n      name,\n      options: {\n        customBodyRender: (value, tableMeta, updateValue) => (\n          <Cell value={value} tableMeta={tableMeta} />\n        ),\n      }\n    }));\n    const actionsColumn = {\n      name: '',\n      options: {\n        sort: false,\n        filter: false,\n      },\n    };\n    columnConfig.unshift(actionsColumn);\n    dataRows = data.map((row, rowIndex) => {\n      const actionsData = (\n        <RowMenu rowIndex={rowIndex} columns={columns} row={row} />\n      );\n      let _row = [actionsData, ...row];\n      return _row;\n    });\n  }\n\n  return (\n    <div className={classes.root}>\n      <MuiThemeProvider theme={getMuiTheme()}>\n        <MUIDataTable\n          title={title}\n          data={dataRows}\n          columns={columnConfig}\n          options={options}\n        />\n      </MuiThemeProvider>\n    </div>\n  );\n};\n\nTableComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  file: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    padding: '1em',\n  },\n});\n\nconst getMuiTheme = () => createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  overrides: {\n    MuiTableCell: {\n      root: {\n        padding: \"0 8px 0 8px\",\n        textAlign: \"unset\",\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 'unset',\n      }\n    },\n    MUIDataTable: {\n      responsiveScroll: {\n        maxHeight: 'unset',\n      },\n    },\n    MUIDataTableBodyCell: {\n      root: {\n        maxWidth: \"33%\",\n      },\n    },\n  }\n});\n\nexport default withStyles(styles)(TableComponent);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  CloudDownload,\n} from '@material-ui/icons';\n\n\nimport { FileContextConsumer } from '../File.context';\n\nfunction CustomToolbar({\n  classes\n}) {\n\n  return (\n    <FileContextConsumer>\n      {({ downloadFile }) => (\n        <React.Fragment>\n          <Tooltip title=\"Download TSV\">\n            <IconButton className={classes.iconButton} onClick={downloadFile}>\n              <CloudDownload />\n            </IconButton>\n          </Tooltip>\n        </React.Fragment>\n      )}\n    </FileContextConsumer>\n  );\n}\n\n\nconst styles = {\n  iconButton: {}\n};\n\nexport default withStyles(styles, { name: \"CustomToolbar\" })(\n  CustomToolbar\n);\n","import Container from './Container';\nexport default Container;\n","import React, {useState} from 'react';\n\nimport TableComponent from './Component';\nimport CustomToolbar from './CustomToolbar';\n\nimport { FileContextConsumer } from '../File.context';\n\nconst TableContainer = () => {\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const options = {\n    // responsive: 'scroll',\n    // fixedHeader: true,\n    print: false,\n    resizableColumns: true,\n    selectableRows: false,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [25, 50, 100],\n    onChangeRowsPerPage: (numberOfRows) => {\n      setRowsPerPage(numberOfRows);\n    },\n    download: false,\n    customToolbar: () => ( <CustomToolbar /> ),\n  };\n\n  return (\n    <FileContextConsumer>\n      {({ file }) => (\n        <TableComponent\n          file={file}\n          options={options}\n        />\n      )}\n    </FileContextConsumer>\n  );\n};\n\nexport default TableContainer;\n","import React from 'react';\nimport './App.css';\n\nimport ApplicationBar from './ApplicationBar';\nimport Table from './Table';\n\nimport { FileContextProvider } from './File.context';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <FileContextProvider>\n        <ApplicationBar />\n        <Table />\n      </FileContextProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}