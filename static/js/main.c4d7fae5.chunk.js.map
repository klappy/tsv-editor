{"version":3,"sources":["FileOpen/helpers.js","FileOpen/index.js","FileOpen/Component.js","ApplicationBar.js","Table/helpers.js","Table/Cell.js","Table/CustomToolbar.js","Table/Component.js","Table/index.js","App.js","serviceWorker.js","index.js"],"names":["handleTsvFileObject","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","fileObject","title","columns","data","text","tsv","wrap","_context","prev","next","pFileReader","sent","tsvParse","name","abrupt","stop","this","_x","apply","arguments","split","map","line","filter","length","shift","tsvGenerate","rows","cells","join","Promise","resolve","reject","fileReader","FileReader","onload","e","target","result","readAsText","Component","withStyles","theme","fab","margin","spacing","unit","classes","setFile","react_default","createElement","lib","extensions","onChange","_ref2","file","helpers","onError","errMsg","alert","icons_index_es","root","flexGrow","menuButton","marginLeft","marginRight","className","index_es","position","variant","color","aria-label","FileOpen","turndownService","TurndownService","addRule","replacement","markdownToHtml","markdown","marked","sanitize","value","tableMeta","replace","dir","contentEditable","onBlur","_markdown","html","turndown","innerHTML","columnIndex","rowIndex","slice","_file","objectSpread","dangerouslySetInnerHTML","__html","CustomToolbar","handleClick","_this","props","toConsumableArray","unshift","FileHelpers","fileDownload","Fragment","iconButton","onClick","React","getMuiTheme","createMuiTheme","overrides","MuiTableCell","padding","maxWidth","textAlign","MuiTableRow","height","MUIDataTable","responsiveScroll","maxHeight","columnConfig","_ref$file","_useState","useState","_useState2","slicedToArray","rowsPerPage","setRowsPerPage","options","customBodyRender","updateValue","Cell","resizableColumns","selectableRows","rowsPerPageOptions","onChangeRowsPerPage","numberOfRows","download","customToolbar","Table_CustomToolbar","styles","dist_default","App","src_ApplicationBar","Table","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4d7fae5.chunk.js","sourcesContent":["\nexport const handleTsvFileObject = async (fileObject) => {\n  let title, columns, data;\n  if (fileObject) {\n    const text = await pFileReader(fileObject);\n    const tsv = tsvParse(text);\n    columns = tsv.columns;\n    data = tsv.data;\n    title = fileObject.name;\n  };\n  return {title, columns, data};\n};\n\nexport const tsvParse = (text) => {\n  let tsv = {};\n  if (text) {\n    const data = text.split('\\n')\n    .map(line => line.split('\\t'))\n    .filter(line => line && line.length > 1);\n    const columns = data.shift();\n    tsv = {\n      columns,\n      data,\n    };\n  }\n  return tsv;\n};\n\nexport const tsvGenerate = (rows) => {\n  let tsv = \"\";\n  if (rows) {\n    tsv = rows.map(cells => cells.join('\\t'))\n    .join('\\n');\n  }\n  return tsv;\n};\n\nexport const pFileReader = (fileObject) => {\n  return new Promise((resolve, reject) => {\n    var fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      const data = e.target.result;\n      resolve(data);\n    };\n    fileReader.readAsText(fileObject);\n  });\n};\n","import Component from './Component';\nexport default Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilePicker } from 'react-file-picker';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n} from '@material-ui/core';\nimport {\n  CloudUpload,\n} from '@material-ui/icons';\n\nimport * as helpers from './helpers';\n\nconst FileOpenComponent = ({\n  classes,\n  setFile,\n}) => {\n\n  return (\n    <FilePicker\n      extensions={['tsv']}\n      onChange={ async (fileObject) => {\n        const file = await helpers.handleTsvFileObject(fileObject);\n        setFile(file);\n      }}\n      onError={errMsg => {\n        alert(errMsg);\n      }}\n    >\n      <CloudUpload />\n    </FilePicker>\n  );\n};\n\nFileOpenComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  setFile: PropTypes.func.isRequired,\n};\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n  },\n});\n\nexport default withStyles(styles)(FileOpenComponent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\n\nimport FileOpen from './FileOpen';\n\nconst ApplicationBar = ({\n  classes,\n  file,\n  setFile,\n}) => {\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open\">\n            <FileOpen setFile={setFile} />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {file.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nApplicationBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  file: PropTypes.object.isRequired,\n  setFile: PropTypes.func.isRequired,\n};\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -18,\n    marginRight: 10,\n  },\n};\n\nexport default withStyles(styles)(ApplicationBar);\n","import marked from 'marked';\nimport TurndownService from 'turndown';\n\nconst turndownService = new TurndownService();\nturndownService.addRule('linebreaks', {\n  filter: ['br'],\n  replacement: () => '<br>',\n});\n\nexport const markdownToHtml = (markdown) => {\n  const html = marked(markdown, {sanitize: true});\n  return html;\n};\n\nexport const htmlToMarkdown = (html) => {\n  const markdown = turndownService.turndown(html).replace(/\\n/g,'<br>');\n  return markdown;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport * as helpers from './helpers';\n\nconst FileOpenComponent = ({\n  classes,\n  value,\n  tableMeta,\n  file,\n  setFile,\n}) => {\n  const markdown = value.replace(/<br>/gi, '\\n');\n  return (\n    <div\n      dir=\"auto\"\n      contentEditable\n      onBlur={(e)=>{\n        const html = e.target.innerHTML;\n        const _markdown = helpers.htmlToMarkdown(html);\n        const {columnIndex, rowIndex} = tableMeta;\n        let data = file.data.slice(0);\n        data[rowIndex][columnIndex] = _markdown;\n        const _file = {...file, data};\n        setFile(_file);\n      }}\n      dangerouslySetInnerHTML={{\n        __html: helpers.markdownToHtml(markdown)\n      }}\n    />\n  );\n};\n\nFileOpenComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  setFile: PropTypes.func.isRequired,\n};\n\nconst styles = theme => ({\n});\n\nexport default withStyles(styles)(FileOpenComponent);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport fileDownload from 'js-file-download';\nimport {\n  IconButton,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  CloudDownload,\n} from '@material-ui/icons';\n\nimport * as FileHelpers from '../FileOpen/helpers';\n\nclass CustomToolbar extends React.Component {\n  handleClick = () => {\n    const {file} = this.props;\n    if (file.columns && file.data) {\n      let rows = [...file.data];\n      rows.unshift(file.columns);\n      const tsv = FileHelpers.tsvGenerate(rows);\n      fileDownload(tsv, file.title);\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Download TSV\">\n          <IconButton className={classes.iconButton} onClick={this.handleClick}>\n            <CloudDownload />\n          </IconButton>\n        </Tooltip>\n      </React.Fragment>\n    );\n  }\n};\n\nconst styles = {\n  iconButton: {}\n};\n\nexport default withStyles(styles, { name: \"CustomToolbar\" })(\n  CustomToolbar\n);\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Cell from './Cell';\nimport CustomToolbar from './CustomToolbar';\n\nconst TableComponent = ({\n  classes,\n  setFile,\n  file,\n  file: {\n    title,\n    columns,\n    data,\n  },\n}) => {\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  let columnConfig;\n  if (columns) {\n    columnConfig = columns.map(name => ({\n      name,\n      options: {\n        customBodyRender: (value, tableMeta, updateValue) => (\n          <Cell value={value} tableMeta={tableMeta} file={file} setFile={setFile} />\n        ),\n      }\n    }));\n  }\n\n  const options = {\n    // responsive: 'scroll',\n    // fixedHeader: true,\n    resizableColumns: true,\n    selectableRows: false,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [25, 50, 100],\n    onChangeRowsPerPage: (numberOfRows) => {\n      setRowsPerPage(numberOfRows);\n    },\n    download: false,\n    customToolbar: () => ( <CustomToolbar file={file} /> ),\n  };\n\n  return (\n    <div className={classes.root}>\n      <MuiThemeProvider theme={getMuiTheme()}>\n        <MUIDataTable\n          title={title}\n          data={data}\n          columns={columnConfig}\n          options={options}\n        />\n      </MuiThemeProvider>\n    </div>\n  );\n};\n\nTableComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  file: PropTypes.object.isRequired,\n  setFile: PropTypes.func.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    padding: '1em',\n  },\n});\n\nconst getMuiTheme = () => createMuiTheme({\n  overrides: {\n    MuiTableCell: {\n      root: {\n        padding: \"0 8px 0 8px\",\n        maxWidth: \"125em\",\n        textAlign: \"unset\",\n      }\n    },\n    MuiTableRow: {\n      root: {\n        height: 'unset',\n      }\n    },\n    MUIDataTable: {\n      responsiveScroll: {\n        maxHeight: 'unset',\n      },\n    },\n  }\n});\n\nexport default withStyles(styles)(TableComponent);\n","import Component from './Component';\nexport default Component;\n","import React, {useState} from 'react';\nimport './App.css';\n\nimport ApplicationBar from './ApplicationBar';\nimport Table from './Table';\n\nconst App = () => {\n  const [file, setFile] = useState({});\n  return (\n    <div className=\"App\">\n      <ApplicationBar file={file} setFile={setFile} />\n      <Table file={file} setFile={setFile} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}